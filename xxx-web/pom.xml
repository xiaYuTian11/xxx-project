<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>xxx-project</artifactId>
        <groupId>top.tanmw</groupId>
        <version>1.0-dev</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>

    <artifactId>xxx-web</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>
    <dependencies>
        <dependency>
            <groupId>top.tanmw</groupId>
            <artifactId>xxx-service</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
    </dependencies>
    <build>
        <finalName>xxx-${project.version}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>templates/**</exclude>
                    <exclude>**/*.xls</exclude>
                    <exclude>**/*.xlsx</exclude>
                    <exclude>**/*.xlsm</exclude>
                    <exclude>**/*.doc</exclude>
                    <exclude>**/*.docx</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>templates/**</include>
                    <include>**/*.xls</include>
                    <include>**/*.xlsx</include>
                    <include>**/*.xlsm</include>
                    <include>**/*.doc</include>
                    <include>**/*.docx</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!-- spring boot repackage -->
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <layout>ZIP</layout>-->
<!--                    <includes>-->
<!--                        <include>-->
<!--                            <groupId>top.tanmw</groupId>-->
<!--                            <artifactId>xxx-service</artifactId>-->
<!--                        </include>-->
<!--                        <include>-->
<!--                            <groupId>top.tanmw</groupId>-->
<!--                            <artifactId>xxx-model</artifactId>-->
<!--                        </include>-->
<!--                        <include>-->
<!--                            <groupId>top.tanmw</groupId>-->
<!--                            <artifactId>xxx-dao</artifactId>-->
<!--                        </include>-->
<!--                        <include>-->
<!--                            <groupId>top.tanmw</groupId>-->
<!--                            <artifactId>xxx-api</artifactId>-->
<!--                        </include>-->
<!--                    </includes>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>repackage</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-compiler-plugin</artifactId>-->
<!--                <version>3.8.1</version>-->
<!--                <configuration>-->
<!--                    <source>${maven.compiler.source}</source>-->
<!--                    <target>${maven.compiler.source}</target>-->
<!--                    <compilerArguments>-->
<!--                        <verbose>-->
<!--&lt;!&ndash;                            <bootclasspath></bootclasspath>&ndash;&gt;-->
<!--&lt;!&ndash;                            <extdirs>${project.basedir}/lib/</extdirs>&ndash;&gt;-->
<!--                        </verbose>-->
<!--                    </compilerArguments>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <configuration>
                    <!--                    <shadedArtifactAttached>false</shadedArtifactAttached>-->
                    <!--                    <shadedClassifierName>${version}</shadedClassifierName>-->
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                    <!--                    <minimizeJar>true</minimizeJar>-->
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.sf</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.dsa</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                                <exclude>META-INF/*.rsa</exclude>
                                <exclude>META-INF/*.EC</exclude>
                                <exclude>META-INF/*.ec</exclude>
                                <exclude>META-INF/MSFTSIG.SF</exclude>
                                <exclude>META-INF/MSFTSIG.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <artifactSet>
                        <includes>
                            <include>top.tanmw:xxx-service</include>
                            <include>top.tanmw:xxx-model</include>
                            <include>top.tanmw:xxx-dao</include>
                            <include>top.tanmw:xxx-api</include>
                        </includes>
                    </artifactSet>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <!-- 将静态资源排除出 jar 包 -->
                    <excludes>
                        <exclude>*.**</exclude>
                        <exclude>static/**</exclude>
                        <exclude>public/**</exclude>
                        <exclude>templates/**</exclude>
                        <exclude>fonts/**</exclude>
                        <!-- 自定义自己的配置文件 -->
                        <exclude>*.yml</exclude>
                    </excludes>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <!-- MANIFEST.MF 中 Class-Path 加入前缀 -->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!-- jar 包不包含唯一版本标识 -->
                            <useUniqueVersions>false</useUniqueVersions>
                            <!-- 指定启动类的包路径 -->
                            <mainClass>com.zenith.xxx.Application</mainClass>
                        </manifest>
                        <manifestEntries>
                            <!--MANIFEST.MF 中 Class-Path 加入资源文件目录 -->
                            <Class-Path>config/ lib/aspose-cells-21.11.jar lib/aspose-word-21.6.jar lib/rmb-0.1.1.jar</Class-Path>
                        </manifestEntries>
                    </archive>
                    <!-- 指定打出的 jar 包路径 -->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>
            <!-- 这个插件是用来复制项目依赖的 jar 包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- 自定义 -->
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <!-- 复制依赖的 jar 包 -->
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- 将依赖的 jar 包复制到该路径下 -->
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <!--这里指定包含 system scope -->
                            <!--                            <includeScope>system</includeScope>-->
                            <!--                            <includeScope>compile</includeScope>-->
                            <excludeArtifactIds>xxx-service,xxx-model,xxx-dao,xxx-api</excludeArtifactIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 这个插件是用来复制项目的静态资源 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- 自定义 -->
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <!-- 复制静态资源 -->
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <!--                            <delimiters>-->
                            <!--                                <delimiter>@</delimiter>-->
                            <!--                            </delimiters>-->
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <resources>
                                <resource>
                                    <!-- 指定静态资源的路径 -->
                                    <directory>src/main/resources</directory>
                                    <!--                                    &lt;!&ndash; 处理文件时替换文件中的变量 &ndash;&gt;-->
                                    <filtering>true</filtering>
                                    <!-- 指定需要复制的文件 -->
                                    <includes>
                                        <include>application.yml</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <!-- 指定静态资源的路径 -->
                                    <directory>src/main/resources</directory>
                                    <filtering>false</filtering>
                                    <!-- 指定需要复制的文件 -->
                                    <includes>
                                        <include>application-${env}.yml</include>
                                        <include>*.xml</include>
                                        <include>*.jks</include>
                                        <include>*.properties</include>
                                        <include>public/**</include>
                                        <include>static/**</include>
                                        <include>templates/**</include>
                                        <include>fonts/**</include>
                                        <include>xsd/**</include>
                                    </includes>
                                </resource>
                            </resources>
                            <!-- 指定复制到该目录下 -->
                            <outputDirectory>${project.build.directory}/config</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--     打包 zip    -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <!-- 这个插件需要指定一个配置文件 -->
                    <descriptors>
                        <descriptor>src/main/resources/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <!-- 自定义 -->
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <!-- 只执行一次 -->
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>